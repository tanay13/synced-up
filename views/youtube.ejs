<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Synced-up</title>
</head>
<body>

    <div id="player"></div>
    <!-- <div class="input-group mb-3">
        <form id="search-box" action="/youtube" method="POST">
            <input name="search" type="text" class="form-control" placeholder="Youtube Link" aria-label="Recipient's username" aria-describedby="basic-addon2">
            <button type="submit" class="input-group-text" id="basic-addon2">Search</button>
        </form>
        
    </div> -->
    <!-- <iframe id="iframe" width="560" height="315" src=" " frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe> -->
    <button id="yt">CLICK ME</button>

    <script>
        
        // const form = document.getElementById('search-box')
        // const myIframe = document.getElementById('iframe')
        // form.addEventListener('submit',(e)=>{
        //     e.preventDefault()
        //     var url = form.search.value;
        //     console.log(url)
        //     var linkID = url.slice(17)
        //     document.getElementById("iframe").src = "https://www.youtube.com/embed/"+linkID
        //     const frameDoc = myIframe.contentWindow
        //     console.log(frameDoc)
        //     form.search.value = " ";
        // })

        // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

        tag.src = "https://www.youtube.com/iframe_api";
        var firstScriptTag = document.getElementsByTagName('script')[0];
        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

        // 3. This function creates an <iframe> (and YouTube player)
        //    after the API code downloads.
        var player;
        function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
            height: '390',
            width: '640',
            videoId: 'M7lc1UVf-VE',
            events: {
            // 'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
            }
        });
        }

        // 4. The API will call this function when the video player is ready.
        function onPlayerReady(event) {
        event.target.playVideo();
        }

        // 5. The API calls this function when the player's state changes.
        //    The function indicates that when playing a video (state=1),
        //    the player should play for six seconds and then stop.
        var done = false;
        function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
            setTimeout(stopVideo, 6000);
            done = true;
            }
        }
        function stopVideo() {
            player.stopVideo();
        }

        

    </script>
</body>
</html>